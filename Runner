import java.util.ArrayList;
/**
 * A class to run the bots and their prearranged conversation.
 * 
 * @author (Alyssa Evans + Dayna Lei) 
 * @version (May 10, 2015)
 */
public class Runner
{
    private static ArrayList <String> store;
    public static void main(String [] args)
    {
        Accel accel = new Accel();
        LastOrder last = new LastOrder();
        Computer compute = new Computer();
        Kira kira = new Kira();
        Miyumi miyu = new Miyumi();
        Nanami nana = new Nanami();
        Ryuuri ryuu = new Ryuuri();
        store = new ArrayList <String> ();
        store.add(accel.getOpening());
        int x = sizeOfArrayList()-1;

        store.add(kira.getResponse(store.get(x)));
        x++;
        store.add(miyu.getResponse(store.get(x)));
        x++;
        store.add(accel.getResponse(store.get(x)));
        x++;
        store.add(nana.getResponse(store.get(x)));
        x++;
        store.add(ryuu.getResponse(store.get(x)));
        x++;
        store.add(last.getResponse(store.get(x)));
        x++;
        store.add(ryuu.getResponse(store.get(x)));
        x++;
        store.add(last.getResponse(store.get(x)));
        x++;
        store.add(nana.getResponse(store.get(x)));
        x++;
        store.add(kira.getResponse(store.get(x)));
        x++;
        store.add(last.getResponse(store.get(x)));
        x++;
        store.add(miyu.getResponse(store.get(x)));
        x++;
        store.add(kira.getResponse(store.get(x)));
        x++;
        store.add(accel.getResponse(store.get(x)));
        x++;
        store.add(miyu.getResponse(store.get(x)));
        x++;
        store.add(ryuu.getResponse(store.get(x)));
        x++;
        store.add(kira.getResponse(store.get(x)));
        x++;
        store.add(ryuu.getResponse(store.get(x)));
        x++;
        store.add(miyu.getResponse(store.get(x)));
        x++;
        store.add(accel.getResponse(store.get(x)));
        x++;
        store.add(nana.getResponse(store.get(x)));
        x++;
        store.add(accel.getResponse(store.get(x)));
        x++;
        store.add(last.getResponse(store.get(x)));
        x++;
        store.add(nana.getResponse(store.get(x)));
        x++;
        store.add(last.getResponse(store.get(x)));
        x++;
        store.add(nana.getResponse(store.get(x)));
        x++;
        store.add(kira.getResponse(store.get(x)));
        x++;
        store.add(ryuu.getResponse(store.get(x)));
        x++;
        store.add(accel.getResponse(store.get(x)));
        x++;
        store.add(kira.getResponse(store.get(x)));
        x++;
        store.add(accel.startSilence(store.get(x)));
        x++;
        store.add(kira.getSilence());
        x++;
        store.add(miyu.getSilence());
        x++;
        store.add(nana.getSilence());
        x++;
        store.add(ryuu.getSilence());
        x++;
        store.add(last.getSilence());
        x++;
        store.add(kira.endSilence());
        x++;
        store.add(nana.getResponse(store.get(x)));
        x++;
        store.add(kira.getResponse(store.get(x)));
        x++;
        store.add(accel.getResponse(store.get(x)));
        x++;
        store.add(kira.getResponse(store.get(x)));
        x++;
        store.add(miyu.getResponse(store.get(x)));
        x++;
        store.add(nana.getResponse(store.get(x)));
        x++;
        store.add(miyu.getResponse(store.get(x)));
        x++;
        store.add(kira.getResponse(store.get(x)));
        x++;
        store.add(compute.getResponse(store.get(x)));
        x++;
        store.add(nana.getResponse(store.get(x)));
        x++;
        store.add(accel.getResponse(store.get(x)));
        x++;
        store.add(compute.getResponse(store.get(x)));
        x++;
        store.add(last.getResponse(store.get(x)));
        x++;
        store.add(ryuu.getResponse(store.get(x)));
        x++;
        store.add(miyu.getResponse(store.get(x)));
        x++;
        store.add(accel.getResponse(store.get(x)));
        x++;
        store.add(kira.getResponse(store.get(x)));
        x++;
        store.add(miyu.getResponse(store.get(x)));
        x++;
        store.add(nana.getResponse(store.get(x)));
        x++;
        store.add(compute.getResponse(store.get(x)));

        for (String q: store)
        {
            System.out.println(q);
            try
            {
                Thread.sleep((int)(Math.random()*3000));
            }
            catch (Exception e)
            {
                
            }
        }
    }

    public static int sizeOfArrayList()
    {
        return store.size();
    }
}